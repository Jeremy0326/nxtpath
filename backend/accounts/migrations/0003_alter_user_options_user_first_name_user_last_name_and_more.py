# Generated by Django 5.2.1 on 2025-07-13 10:20

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_alter_resume_unique_together'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AlterField(
            model_name='company',
            name='size',
            field=models.CharField(blank=True, choices=[('SEED', 'Seed (1-10 employees)'), ('STARTUP', 'Startup (11-50 employees)'), ('SCALEUP', 'Scale-up (51-250 employees)'), ('MID_SIZE', 'Mid-size (251-1000 employees)'), ('LARGE', 'Large (1001-5000 employees)'), ('ENTERPRISE', 'Enterprise (5001+ employees)')], max_length=20),
        ),
        migrations.AlterField(
            model_name='companyjoinrequest',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10),
        ),
        migrations.AlterField(
            model_name='resume',
            name='embedding',
            field=models.JSONField(blank=True, help_text="Vector embedding for the resume's text.", null=True),
        ),
        migrations.AlterField(
            model_name='resume',
            name='parsed_text',
            field=models.TextField(blank=True, help_text='The full text extracted from the resume file.'),
        ),
        migrations.AlterField(
            model_name='studentprofile',
            name='career_preferences',
            field=models.JSONField(blank=True, default=dict, help_text='Structured data on career goals, like desired roles, industries, etc.'),
        ),
        migrations.AlterField(
            model_name='studentprofile',
            name='interests',
            field=models.JSONField(blank=True, default=list, help_text="A list of the student's personal interests or hobbies."),
        ),
        migrations.AlterField(
            model_name='universityjoinrequest',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10),
        ),
        migrations.AlterField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_type',
            field=models.CharField(choices=[('student', 'Student'), ('employer', 'Employer'), ('university', 'University Staff'), ('admin', 'Admin')], default='student', max_length=10),
        ),
    ]

# Generated by Django 5.2.1 on 2025-07-14 15:04

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0003_alter_user_options_user_first_name_user_last_name_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('APPLIED', 'Applied'), ('REVIEW', 'Under Review'), ('SHORTLISTED', 'Shortlisted'), ('AI_PENDING', 'AI Interview Pending'), ('AI_COMPLETED', 'AI Interview Completed'), ('TECH_INTERVIEW', 'Technical Interview'), ('HR_INTERVIEW', 'HR Interview'), ('OFFERED', 'Offer Extended'), ('ACCEPTED', 'Offer Accepted'), ('DECLINED', 'Offer Declined'), ('REJECTED', 'Rejected'), ('WITHDRAWN', 'Withdrawn by Candidate')], default='APPLIED', max_length=20)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL)),
                ('resume', models.ForeignKey(help_text='The specific resume submitted for this application.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.resume')),
            ],
            options={
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='AIInterview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Assignment'), ('INVITED', 'Invited'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('ERROR', 'Error')], default='PENDING', max_length=20)),
                ('audio_file_url', models.URLField(blank=True, max_length=500, null=True)),
                ('summary', models.TextField(blank=True, help_text='AI-generated summary of the interview.')),
                ('overall_score', models.IntegerField(blank=True, help_text='Overall performance score (0-100).', null=True)),
                ('questions', models.JSONField(blank=True, default=list, help_text='List of generated interview questions.')),
                ('answers', models.JSONField(blank=True, default=list, help_text='List of candidate answers (text/audio reference).')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='interview', to='jobs.application')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('requirements', models.JSONField(default=list, help_text='List of strings detailing job requirements.')),
                ('responsibilities', models.JSONField(default=list, help_text='List of strings detailing job responsibilities.')),
                ('location', models.CharField(blank=True, max_length=255)),
                ('job_type', models.CharField(choices=[('FULL_TIME', 'Full-time'), ('PART_TIME', 'Part-time'), ('CONTRACT', 'Contract'), ('INTERNSHIP', 'Internship'), ('TEMPORARY', 'Temporary')], default='FULL_TIME', max_length=20)),
                ('remote_option', models.CharField(choices=[('ON_SITE', 'On-site'), ('HYBRID', 'Hybrid'), ('REMOTE', 'Remote')], default='ON_SITE', max_length=20)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(blank=True, default='MYR', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('application_deadline', models.DateTimeField(blank=True, null=True)),
                ('matching_weights', models.JSONField(blank=True, default=dict, help_text='JSON object for AI matching weights. E.g., {"skills": 0.5, "experience": 0.3, "keywords": 0.2}')),
                ('embedding', models.JSONField(blank=True, help_text='Vector embedding for this job description.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='accounts.company')),
                ('skills', models.ManyToManyField(blank=True, to='jobs.skill')),
            ],
        ),
        migrations.AddField(
            model_name='application',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='jobs.job'),
        ),
        migrations.CreateModel(
            name='InterviewUtterance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sequence', models.PositiveIntegerField()),
                ('speaker', models.CharField(choices=[('AI', 'AI Interviewer'), ('CANDIDATE', 'Candidate')], max_length=10)),
                ('text', models.TextField()),
                ('start_time', models.PositiveIntegerField(help_text='Start time of utterance in seconds from beginning of audio.')),
                ('end_time', models.PositiveIntegerField(help_text='End time of utterance in seconds from beginning of audio.')),
                ('audio_clip_url', models.URLField(blank=True, help_text='URL to the specific audio clip for this utterance.', max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utterances', to='jobs.aiinterview')),
            ],
            options={
                'ordering': ['interview', 'sequence'],
                'unique_together': {('interview', 'sequence')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='application',
            unique_together={('job', 'applicant')},
        ),
        migrations.CreateModel(
            name='AIAnalysisReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('overall_score', models.IntegerField(help_text='Overall matching score from 0-100, generated by the AI.')),
                ('report_data', models.JSONField(help_text='Full JSON output from the advanced analysis model.')),
                ('report_version', models.CharField(default='1.0', help_text='The version of the analysis model and prompt used.', max_length=50)),
                ('model_name', models.CharField(help_text="Version of the model used (e.g., 'gemini-1.5-pro').", max_length=100)),
                ('is_stale', models.BooleanField(default=False, help_text='True if the resume or job has been updated since this report was generated.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_reports', to='accounts.resume')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_reports', to='jobs.job')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('resume', 'job')},
            },
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='jobs.job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-saved_at'],
                'unique_together': {('user', 'job')},
            },
        ),
    ] 